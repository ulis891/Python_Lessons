"""
Математик Виталий Евгеньевич задумался над вопросом выгоды систем счисления.
Он решил, что выгодной системой счисления будет являться та, в которой число имеет наибольшую сумму цифр.
Напишите программу, которая по введённому числу определяет основание системы счисления с максимальной выгодой.

Формат ввода
Одно натурально число.

Формат вывода
Одно натуральное число из диапазона [2;10] — основание системы счисления с максимальной выгодой.
Если таких оснований несколько, выбирается наименьшее.
"""


def dec_to_sys(n: int, sys: int) -> str:
    """
    Переводит число из десятичной системы в заданную систему
    @param n: десятичное число
    @param sys: система счисления от 2 до 9
    @return n_2: число в заданной системе исчесления
    """

    num_list = []
    system = sys
    while True:
        if n < system:
            num_list.append(n)
            break
        p = n - n // system * system
        num_list.append(p)
        n //= system
    num_list.reverse()
    return "".join(list(map(str, num_list)))


def sum_num(n: str) -> int:
    """
    Возвращает сумму цифр в строке с цифрами
    @param n: строка цифр
    @return: сумма цифр
    """
    return sum(map(int, n))


def find_best(num: int):
    """
    По введённому числу определяет основание системы счисления с максимальной выгодой.
    Выгодной системой счисления будет являться та, в которой число имеет наибольшую сумму цифр
    Возвращает цифру выгодной системы исчисления
    @param num: число в десятичной системе
    @return: цифра выгодной системы исчисления
    """
    res_list = []
    for i in range(2, 10):
        res_list.append([sum_num(dec_to_sys(num, i)), i])
    res_list.append([sum_num(str(num)), 10])
    result = [res[1] for res in res_list if res[0] == max(res_list)[0]]
    return min(result)


print(find_best(12))


